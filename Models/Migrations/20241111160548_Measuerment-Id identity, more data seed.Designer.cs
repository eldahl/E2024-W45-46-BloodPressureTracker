// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(BtpDbContext))]
    [Migration("20241111160548_Measuerment-Id identity, more data seed")]
    partial class MeasuermentIdidentitymoredataseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Diastolic")
                        .HasColumnType("int");

                    b.Property<string>("PatientSsn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Seen")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Systolic")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientSsn")
                        .IsUnique();

                    b.ToTable("Measurements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 170,
                            PatientSsn = "462-59-4864",
                            Seen = false,
                            Systolic = 67
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 200,
                            PatientSsn = "144-75-2929",
                            Seen = false,
                            Systolic = 72
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 198,
                            PatientSsn = "178-14-0036",
                            Seen = false,
                            Systolic = 64
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 120,
                            PatientSsn = "500-29-2239",
                            Seen = false,
                            Systolic = 76
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 174,
                            PatientSsn = "509-90-5304",
                            Seen = false,
                            Systolic = 89
                        });
                });

            modelBuilder.Entity("Models.Patient", b =>
                {
                    b.Property<string>("SSN")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SSN");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            SSN = "462-59-4864",
                            Mail = "WMA@mail.com",
                            Name = "Wilber Ma"
                        },
                        new
                        {
                            SSN = "144-75-2929",
                            Mail = "PAO@mail.com",
                            Name = "Rebeca Pao"
                        },
                        new
                        {
                            SSN = "178-14-0036",
                            Mail = "RHusson@mail.com",
                            Name = "Raghallach Husson"
                        },
                        new
                        {
                            SSN = "500-29-2239",
                            Mail = "xy@mail.com",
                            Name = "Xena Yun"
                        },
                        new
                        {
                            SSN = "509-90-5304",
                            Mail = "Clayton@mail.com",
                            Name = "Helana Clayton"
                        });
                });

            modelBuilder.Entity("Models.Measurement", b =>
                {
                    b.HasOne("Models.Patient", "Patient")
                        .WithOne()
                        .HasForeignKey("Models.Measurement", "PatientSsn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
